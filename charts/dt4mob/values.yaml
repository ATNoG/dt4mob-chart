cert-manager:
  crds:
    enabled: true


cloud2edge:
  # TODO: Make this configurable under a more appropriate key
  demoDevice:
    tenant: "test-tenant"

  hono:
    messagingNetworkTypes:
      - amqp

    kafkaMessagingClusterExample:
      enabled: false

    amqpMessagingNetworkExample:
      enabled: true
      dispatchRouter:
        adapterUids: "DT4MOB;Hono"
        tlsKeysSecret: "c2e-dispatch-router-cert"
        tlsTrustStoreConfigMap: "none"
        tlsTrustStoreSecret:
          secretName: "c2e-dispatch-router-cert"
          # secretName: "c2e-server-intermediate-ca-secret"
          # selector: "tls.crt"

      broker:
        artemis:
          keyStorePath: "/opt/amq/tls/keystore.jks"
          trustStorePath: "/opt/amq/tls/truststore.jks"
          certUsersFilePath: "users/users.properties"
          extraVolumeMounts:
          - name: "tls-keys"
            mountPath: "/opt/amq/tls"
            readOnly: true
          - name: "users"
            mountPath: "/opt/amq/conf/users"
            readOnly: true
          extraVolumes:
          - name: "users"
            secret:
              secretName: "c2e-artemis-users"
          - name: "tls-keys"
            secret:
              secretName: "c2e-artemis-cert"


    useLoadBalancer: false
    externalAccess:
      enabled: false

    deviceRegistryExample:
      addExampleData: true

      mongoDBBasedDeviceRegistry:
        containerRegistry: "atnog-harbor.av.it.pt"
        imageName: "capucho/hono-service-device-registry-mongodb"
        imageTag: "2.7.0-SNAPSHOT"

      tlsKeysSecret: "c2e-device-registry-cert"
      tlsTrustStoreConfigMap: "none"
      tlsTrustStoreSecret:
        secretName: "c2e-device-registry-cert"
        # selector: "tls.crt"

    adapters:
      useExternalAuth: true
      mqtt:
        tlsKeysSecret: "c2e-mqtt-adapter-cert"
        tlsTrustStoreConfigMap: "none"
        tlsTrustStoreSecret:
          secretName: "c2e-mqtt-adapter-cert"
      http:
        tlsKeysSecret: "c2e-http-adapter-cert"
        tlsTrustStoreConfigMap: "none"
        tlsTrustStoreSecret:
          secretName: "c2e-http-adapter-cert"
      amqp:
        tlsKeysSecret: "c2e-amqp-adapter-cert"
        tlsTrustStoreConfigMap: "none"
        tlsTrustStoreSecret:
          secretName: "c2e-amqp-adapter-cert"

    authServer:
      containerRegistry: "atnog-harbor.av.it.pt"
      imageName: "capucho/hono-service-auth"
      imageTag: "2.7.0-SNAPSHOT"

      tlsKeysSecret: "c2e-auth-server-cert"
      tlsTrustStoreSecret:
        secretName: "c2e-auth-server-cert"
        # secretName: "c2e-server-intermediate-ca-secret"
        # selector: "tls.crt"

      extraVolumes:
        - name: "permissions"
          secret:
            secretName: "dt4mob-permissions"
      hono:
        auth:
          svc:
            supportedSaslMechanisms: "EXTERNAL,PLAIN"

    commandRouterService:
      containerRegistry: "atnog-harbor.av.it.pt"
      imageName: "capucho/hono-service-command-router-infinispan"
      imageTag: "2.7.0-SNAPSHOT"

      tlsKeysSecret: "c2e-command-router-cert"
      tlsTrustStoreConfigMap: "none"
      tlsTrustStoreSecret:
        secretName: "c2e-command-router-cert"
        # secretName: "c2e-server-intermediate-ca-secret"
        # selector: "tls.crt"


  ditto:
    ingress:
      enabled: true
      className: nginx
      root:
        paths:
        - path: /
          pathType: Exact
          backendSuffix: nginx
        - path: /index.html
          pathType: ImplementationSpecific
          backendSuffix: nginx
        - path: /ditto-up.svg
          pathType: ImplementationSpecific
          backendSuffix: nginx
        - path: /ditto-down.svg
          pathType: ImplementationSpecific
          backendSuffix: nginx

    swaggerui:
      resources:
        memoryMi: 64

    nginx:
      service:
        type: ClusterIP

    mongodb:
      # TODO: Use replicated mongo
      resources:
        limits:
          cpu: 1.0
          memory: "512Mi"

      podSecurityContext:
        fsGroup: null
